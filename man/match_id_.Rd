% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/match_id.R
\name{match_id_}
\alias{match_id_}
\title{Match concatenated IDs in vector}
\usage{
match_id_(
  to_match,
  ref,
  match,
  new,
  regex = "[^;]+",
  collapse = ";",
  simplify = FALSE
)
}
\arguments{
\item{to_match}{\verb{character vector}. Contains the IDs to be matched.}

\item{ref}{\code{data.frame}. A reference data.frame with the IDs to use for
matching and the new columns to output as a list.}

\item{match}{\code{string}. Name of column in \code{ref} to use for
matching.}

\item{new}{\verb{character vector}. Name of column(s) in \code{ref} to output.}

\item{regex}{\code{string}. Regular expression to use for extracting the IDs
from the \code{to_match} vector.}

\item{collapse}{\code{string}. If there are multiple IDs in the
\code{to_match} vector, how should they be collapsed.}

\item{simplify}{\code{logical}. Should the output list be unlisted? Default is \code{FALSE}.}
}
\value{
Returns a list of named vectors unless \code{simplify = TRUE} wherein a
named vector is returned.
}
\description{
Match IDs in a vector to a reference table and then take other columns
from that reference table and output them as a list of vectors. Mainly
used for matching metadata to UniProt accessions, but will work for any
type of string ID e.g. Ensembl IDs.
}
\examples{
ref_df <- data.frame(
  accession = c("AAA111", "BBB222", "CCC333", "DDD444"),
  name = c("protein a", "protein b", "protein c", "protein d"),
  value = c(11, 22, 33, 44)
)

my_vec <- c("AAA111", "CCC333;BBB222", "EEE555")

my_df2 <- match_id_(
  my_vec,
  ref_df,
  "accession",
  c("name", "value")
)

}
